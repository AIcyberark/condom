name: 'build-test'
on:
  pull_request:
  push:
    branches:
      - source

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - run: |
          npm run all
      # Deploy to local repo
      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-mysql8: # make sure the action works on a clean machine without building
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Mysql 8.0
        run: |
          git clone https://github.com/docker-library/mysql.git
      - uses: alicesu55/condom@build
        with:
          folder: 'mysql/8.0'
      - name: Test Mysql 8.0
        run: |
          cat mysql/8.0/Dockerfile
          cd mysql/8.0; docker build -t mysql8 .

  test-nginx-buster:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get nginx-buster
        run: |
          git clone https://github.com/nginxinc/docker-nginx.git
      - uses: alicesu55/condom@build
        with:
          folder: 'docker-nginx/stable/buster'
      - name: Test Nginx
        run: |
          cat docker-nginx/stable/buster/Dockerfile
          cd docker-nginx/stable/buster; docker build -t nginx .

  test-mongo-4v4:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get
        run: |
          git clone https://github.com/docker-library/mongo.git
      - uses: alicesu55/condom@build
        with:
          folder: 'mongo/4.4'
      - name: Test
        run: |
          cat mongo/4.4/Dockerfile
          cd mongo/4.4; docker build -t mongo4 .

  test-postgres-alpine:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get
        run: |
          git clone https://github.com/docker-library/postgres.git
      - uses: alicesu55/condom@build
        with:
          folder: 'postgres/13/alpine'
      - name: Test
        run: |
          cat postgres/13/alpine/Dockerfile
          cd postgres/13/alpine; docker build -t postgres .

  deploy:
    runs-on: ubuntu-latest
    needs: [test-mysql8, test-nginx-buster, test-mongo-4v4, 'test-postgres-alpine']
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - run: |
          npm run all
      # Deploy to local repo
      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: stage
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "Bot: release compiled files based on commit {sha}. Read source branch instead"
